name: Emergency approve

inputs:
  BYPASS_TEAM:
    required: false
  GHAPP_ID:
    required: true
  GHAPP_SSH_KEY:
    required: true

runs:
  using: composite
  steps:

    - name: Get GitHub App token
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ inputs.GHAPP_ID }}
        private-key: ${{ inputs.GHAPP_SSH_KEY }}

    - name: Set global variables
      shell: bash
      run: |

        echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
        echo "ORG_NAME=${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "PR_AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
        echo "RUN_ID=${{ github.run_id }}" >> $GITHUB_ENV
        echo "LAST_COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

    - name: Fetch Team Members of Specific Team
      shell: bash
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
        TEAM_NAME: ${{ inputs.bypass_team }}
      run: |
        echo "Fetching members of team: $TEAM_NAME"

        TEAM_MEMBERS=$(gh api orgs/$ORG_NAME/teams/$TEAM_NAME/members --jq 'map(.login) | join(" ")' || echo "Error: Could not fetch team members")
        echo "Members of $TEAM_NAME: ${TEAM_MEMBERS:-None}"

        if echo "$TEAM_MEMBERS" | grep -wq "$PR_AUTHOR"; then
          echo "✅ PR Author is a member of $TEAM_NAME!"
          echo "AUTHOR_IS_BYPASS_MEMBER=true" >> $GITHUB_ENV
        else
          echo "❌ PR Author is NOT a member of $TEAM_NAME!"
          echo "AUTHOR_IS_BYPASS_MEMBER=false" >> $GITHUB_ENV
          exit 0
        fi

    - name: Wait for All Checks to Complete (Excluding Current Job)
      shell: bash
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |

        # Fetch current job ID
        CURRENT_JOB_ID=$(gh api repos/$REPO/actions/runs/$RUN_ID/jobs --jq '.jobs[] | .id')
        
        echo "Current Job ID -> $CURRENT_JOB_ID"
        echo "Waiting for all required checks to complete..."

        while true; do
          IN_PROGRESS=$(gh api repos/$REPO/commits/$LAST_COMMIT/check-runs \
            --jq '[.check_runs[] | select(.status == "in_progress" or .status == "queued") | select(.id != '"$CURRENT_JOB_ID"')] | length')
          if [[ "$IN_PROGRESS" -eq 0 ]]; then
            echo "✅ All checks (excluding this job) have completed!"
            break
          else
            echo "⏳ Checks are still running... waiting 30 seconds before rechecking."
            sleep 30
          fi
        done

    - name: Verify All Checks Passed
      shell: bash
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |

        echo "Fetching check runs for current PR"

        FAILED_CHECKS=$(gh api repos/$REPO/commits/$LAST_COMMIT/check-runs --jq '.check_runs | map(select(.conclusion != "success" and .conclusion != null)) | length')

        if [[ "$FAILED_CHECKS" -eq 0 ]]; then
          echo "✅ All checks are successful!"
          echo "ALL_CHECKS_PASSED=true" >> $GITHUB_ENV
        else
          echo "❌ Some checks have failed!"
          echo "ALL_CHECKS_PASSED=false" >> $GITHUB_ENV
          exit 0
        fi

    - name: Approve
      if: env.AUTHOR_IS_BYPASS_MEMBER == 'true' && env.ALL_CHECKS_PASSED == 'true'
      uses: hmarr/auto-approve-action@f0939ea97e9205ef24d872e76833fa908a770363
      with:
        github-token: ${{ steps.app-token.outputs.token }}