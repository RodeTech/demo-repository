name: Emergency review bypass

on:
  pull_request_target:
    types:
      - labeled

permissions: write-all

jobs:
  approve:
    name: Approve
    runs-on: ubuntu-latest
    if: github.event.label.name == 'emergency'
    steps:
    
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: 1170727
          private-key: ${{ secrets.APP_PRIVATE_KEY_1170727 }}
          
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - id: committer
        run: echo "string=${{ steps.app-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>"  >> "$GITHUB_OUTPUT"
      - run: echo "committer string is ${{ steps.committer.outputs.string }}"
      
      - name: Approve
        uses: hmarr/auto-approve-action@f0939ea97e9205ef24d872e76833fa908a770363
        with:
          github-token: ${{ steps.app-token.outputs.token }}
      - id: automerge
        name: automerge
        uses: "pascalgn/automerge-action@v0.16.4"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          MERGE_LABELS: "emergency"
          MERGE_REMOVE_LABELS: "emergency"
          MERGE_METHOD: "squash"
